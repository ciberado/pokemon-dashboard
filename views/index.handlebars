<style>
    body {
        overflow: hidden;
    }

    #capsidelogo {
        position: absolute;
        right: 1em;
        bottom: 1em;
        width: 300px;
        padding: 0;
    }

    #version {
        position: absolute;
        left: 1em;
        bottom: 1em;
        width: 300px;
        padding: 0;
        font-size: 4em;
        font-weight: bold;
        color: silver;
    }

    #pokemonlogo {
        position: absolute;
        width: 98%;
        margin: 0 auto;
        z-index: -10;
        opacity: 0.4;
    }


    .card {
        display: inline-block;
        opacity: 0.8;
        margin : 1px;
        width : 100px;
        height: 100px;
        border-radius: 50%;
        background-color : rgba(224, 189, 31, 0.726);
        border: 2px solid rgba(204, 0, 0, 0.726);
        transition: all 0.2s ease-in-out;
        text-align: center;        
    }

    .card.zoomOut {
        transform: scale(0.1)
    }
    .card.zoomIn {
        transform: scale(1.1);
    }

    .card img {
        margin-top: 10px;
    }

</style>
<img id="capsidelogo" src="img/avatar-capside.png" alt="capside logo" />
<img id="pokemonlogo" src="img/pokemon-logo.svg" alt="pokemon logo" />
<div id="cards"></div>
<div id="version">0.0.1 dashboard</div>

<script src="https://code.jquery.com/jquery-3.4.1.min.js"
    integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js"></script>

<script>


const $trackedCards = {};

async function processElement(element) {
    if (!$trackedCards[element.id]) {
        console.log(`New element detected: ${element.id}.`);
        $trackedCard = await createNewCard(element);
        $trackedCard
            .appendTo('#cards')
            .fadeIn()
            .removeClass('zoomOut');
        $trackedCards[element.id] = $trackedCard;
    } else if (Date.now - element.timestamp > 1000*5) {
        console.log(`Removing element ${element.id}.`);
        await $trackedCards.fadeOut().promise();
        element.card.remove();
        delete tracked[element.id];
    } else {
        console.log('BEAT');
        $trackedCards[element.id].addClass("zoomIn").delay(200).queue(function(){
            $(this).removeClass("zoomIn").dequeue();
        });
    }
    
}

$(function () {
    var socket = io();
    socket.on('healthbeat', function(msg){
        const beat = msg.beat;
        // healthbeat message example: 
        //{"beat":{"ip":"52.157.97.226","info":{"pokemon":{"id":"393","name":"Piplup"}},"timestamp":1572966268703}}
        
        // stalled data is ignored
        if (Date.now() - beat.timestamp > 1000*60) return;

        const element = {
            id : beat.ip + '-' + beat.info.pokemon.id,
            label : beat.info.pokemon.name,
            info : beat.info.pokemon.id,
            timestamp : beat.timestamp
        };
        processElement(element);
    });


    function getPokemon() {
        const pokemonDB = [
            {"id" : "4", "name" : "Horsea"},
            {"id" : "5", "name" : "Seadra"},
            {"id" : "15", "name" : "Goldeen"},
            {"id" : "25", "name" : "Seaking"},
            {"id" : "41", "name" : "Butterfree"},
            {"id" : "39", "name" : "Staryu"},
            {"id" : "52", "name" : "Starmie"},
            {"id" : "64", "name" : "Mr. Mime"},
            {"id" : "68", "name" : "Scyther"},
            {"id" : "92", "name" : "Jynx"},
            {"id" : "95", "name" : "Electabuzz"},
            {"id" : "112", "name" : "Magmar"},
            {"id" : "123", "name" : "Pinsir"},
            {"id" : "130", "name" : "Tauros"},
            {"id" : "136", "name" : "Magikarp"},
            {"id" : "143", "name" : "Weedle"},
            {"id" : "148", "name" : "Gyarados"},
            {"id" : "169", "name" : "Lapras"},
            {"id" : "179", "name" : "Ditto"},
            {"id" : "181", "name" : "Eevee"}
        ];
        return pokemonDB[parseInt(pokemonDB.length * Math.random())];
    }
    setInterval(function() {
        const pokemon = getPokemon();
        const element = {
            id : pokemon.id,
            label : pokemon.name,
            info : pokemon.id,
            timestamp : Date.now()
        };
        processElement(element);        
    }, 1000);
});



</script>